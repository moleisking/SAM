{"version":3,"sources":["components/login.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAC1C,qBAA4B,kBAAkB,CAAC,CAAA;AAC/C,qBAA4B,kBAAkB,CAAC,CAAA;AAC/C,uBAAuB,iBAAiB,CAAC,CAAA;AAQzC;IASI,eAAoB,IAAiB,EAAU,IAAiB,EAAU,MAAc;QAApE,SAAI,GAAJ,IAAI,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAPxF,cAAS,GAAG;YACR,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;SACX,CAAC;QAKE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,qBAAK,GAAL;QAAA,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAChC;YACI,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACzC,CAAC,EACD,UAAC,GAAG;YACA,KAAI,CAAC,OAAO,GAAG,cAAc,CAAC;QAClC,CAAC,CACJ,CAAA;IACL,CAAC;IAED,wBAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CACnC;YACI,KAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QACrC,CAAC,EACD,UAAC,GAAG;YACA,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACvB,CAAC,CACJ,CAAC;IACN,CAAC;IAvCL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,mBAAmB;YAChC,SAAS,EAAE,CAAC,kBAAW,EAAE,kBAAW,CAAC;SACxC,CAAC;;aAAA;IAoCF,YAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,aAAK,QAkCjB,CAAA","file":"components/login.js","sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { AuthService } from \"../services/auth\";\r\nimport { UserService } from \"../services/user\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"login-component\",\r\n    templateUrl: \"/views/login.html\",\r\n    providers: [UserService, AuthService]\r\n})\r\n\r\nexport class Login {\r\n\r\n    localUser = {\r\n        name: \"\",\r\n        pass: \"\"\r\n    };\r\n\r\n    message: string;\r\n\r\n    constructor(private auth: AuthService, private user: UserService, private router: Router) {\r\n        this.message = \"login\";\r\n    }\r\n\r\n    login() {\r\n        this.auth.login(this.localUser).then(\r\n            () => {\r\n                this.router.navigate([\"/dashboard\"]);\r\n            },\r\n            (res) => {\r\n                this.message = \"invalid user\";\r\n            }\r\n        )\r\n    }\r\n\r\n    register() {\r\n        this.user.register(this.localUser).then(\r\n            () => {\r\n                this.message = \"user registered\";\r\n            },\r\n            (res) => {\r\n                this.message = res;\r\n            }\r\n        );\r\n    }\r\n}"],"sourceRoot":"/source/"}