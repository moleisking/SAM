{"version":3,"sources":["services/auth.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8B,eAAe,CAAC,CAAA;AAC9C,yBAAyB,oBAAoB,CAAC,CAAA;AAI9C;IAEE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,2BAAK,GAAL,UAAM,SAAS;QAAf,iBAmBC;QAlBC,IAAI,KAAK,GAAG,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;QACjE,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QAEpE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAQ,CAAC,WAAW,GAAG,mBAAmB,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CAC/F,UAAC,IAAI;gBACH,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;oBACxB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClE,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC;oBACjC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CACF,CAAA;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED,gCAAU,GAAV;QACE,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAlCH;QAAC,iBAAU,EAAE;;mBAAA;IAoCb,kBAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,mBAAW,cAkCvB,CAAA","file":"services/auth.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Http, Headers } from \"@angular/http\";\r\nimport { Settings } from \"../config/settings\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  login(usercreds) {\r\n    let creds = \"name=\" + usercreds.name + \"&pass=\" + usercreds.pass;\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/X-www-form-urlencoded\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(Settings.backend_url + \"/api/authenticate\", creds, { headers: headers }).subscribe(\r\n        (data) => {\r\n          if (data.json().success) {\r\n            localStorage.setItem(\"auth_key\", data.json().token.split(\" \")[1]);\r\n            resolve(true);\r\n          }\r\n          else {\r\n            console.log(data.json().message);\r\n            reject(data.json().message);\r\n          }\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"auth_key\");\r\n  }\r\n\r\n  isLoggedIn() {\r\n    if (localStorage.getItem(\"auth_key\") !== null)\r\n      return true;\r\n  }\r\n\r\n}"],"sourceRoot":"/source/"}